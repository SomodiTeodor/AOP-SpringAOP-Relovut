{
  // Place your gamepoint_typescript workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }

  "dispatchAction": {
    "scope": "typescript",
    "prefix": "dispatchAction",
    "body": [
      "// prettier-ignore",
      "export const ${1:functionName}: ActionCreator<ThunkAction<Promise<${2:ActionsReturned} | ErrorActions>, StoreState, {}, AnyAction>> =",
      "(${3:parameters}) => {",
      "  return async (dispatch: ThunkDispatch<StoreState, {}, AnyAction>): Promise<${2:ActionsReturned} | ErrorActions> => {",
      "  try {",
      "      $0",
      "    }",
      "    catch (err) {",
      "      return dispatch(setError(err ? err.response : err));",
      "    }",
      "  };",
      "};"
    ],
    "description": "Creates an action that calls thunk dispatch, adjusted for the current project"
  }
}
